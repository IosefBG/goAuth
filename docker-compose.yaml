version: '3'

services:
  postgres:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: goAuth
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      goauth_network:
        ipv4_address: 172.28.0.2  # Static IP address for PostgreSQL container

  grafana:
    image: grafana/grafana
    restart: always
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_USER: your_admin_username
      GF_SECURITY_ADMIN_PASSWORD: your_admin_password
    networks:
      goauth_network:
        ipv4_address: 172.28.1.2  # Static IP address for Grafana container

  prometheus:
    image: prom/prometheus
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.prod.yaml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      goauth_network:
        ipv4_address: 172.28.1.1  # Static IP address for Prometheus container

  go-auth:
    image: go-auth:latest  # Use the image you built
    restart: always
    ports:
      - "8000:8000"
    volumes:
      - "./prod.env:/goAuth/.env"
    networks:
      goauth_network:
        ipv4_address: 172.28.0.6  # Static IP address for Go application container

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.2
    restart: always
    volumes:
      - /:/rootfs:ro
      - /dev/disk/:/dev/disk:ro
      - /etc/machine-id:/etc/machine-id:ro
      - /sys:/sys:ro
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
      - /var/lib/containers:/var/lib/containers:ro
      - /var/run:/var/run:rw
      - /var/lib/dbus:/var/lib/dbus:ro   # Mount the entire /var/lib/dbus directory with read-only access
    privileged: true
    ports:
      - "8080:8080"
    networks:
      goauth_network:
        ipv4_address: 172.28.1.3

  node_exporter:
    image: prom/node-exporter
    restart: always
    ports:
      - "9100:9100"
    networks:
      goauth_network:
        ipv4_address: 172.28.1.4
    command: [ "--path.rootfs=/host" ]

networks:
  goauth_network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/20  # Define a subnet for the network

volumes:
  postgres_data:
  grafana_data:
  prometheus_data: